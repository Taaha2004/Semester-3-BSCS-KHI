INCLUDE Irvine32.inc

.data
array DWORD 12, 45, 67, 23, 89, 34, 56, 
             78, 90, 11, 22, 33, 44, 55, 
             66, 77, 88, 99, 101, 15
prompt BYTE "Enter an integer to search in the array: ", 0
foundmsg BYTE "Found at index: ", 0
not_found BYTE "Value not found in the array", 0

.code
Search_array PROTO, 
    pointer:PTR DWORD, 
    value:DWORD, 
    index:DWORD, 
    arr_length:DWORD

main PROC
    ; Print prompt to enter value
    mov edx, OFFSET prompt
    call WriteString
    call Crlf
    
    ; Read user input (the value to search for)
    call ReadInt
    
    ; Get the length of the array
    mov ecx, LENGTHOF array
   
    ; Prepare for search
    invoke Search_array, ADDR array, eax, 0, ecx
    

    exit
main ENDP

Search_array PROC USES eax ebx ecx edx esi,
    pointer:PTR DWORD, 
    value:DWORD, 
    index:DWORD, 
    arr_length:DWORD

    ; Base case: if the index is equal to the array length, value is not found
    mov ecx, index
    cmp ecx, arr_length-1
    jae not_found_label
    
    ; Access current array element
    mov esi, pointer     ; Load pointer to array into esi
    mov ebx, [esi + ecx*4]  ; Load the array element into ebx
    
    ; Compare the current array element with the search value
    cmp ebx, value
    je found_label
    
    ; Recursive call with incremented index
    inc ecx
    invoke Search_array, pointer, value, ecx, arr_length
    jmp exit_proc

found_label:
    ; If value is found, print the index
    mov edx, OFFSET foundmsg
    call WriteString
    mov eax, index  ; Use the found index
    call WriteInt
    call Crlf
    jmp exit_proc

not_found_label:
    ; If value is not found, print a message
    mov edx, OFFSET not_found
    call WriteString
    call Crlf

exit_proc:
    ret
Search_array ENDP

END main