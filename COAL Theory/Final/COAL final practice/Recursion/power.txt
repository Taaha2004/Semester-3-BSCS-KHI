INCLUDE Irvine32.inc
; recursion: power( repeated multiplication)


.data
exponent dword 4
base dword 3
result dword 1

.code
power proc uses edi eax edx, n:dword , m: dword ,r :ptr dword
mov edx,n ; base
mov eax,m ; exponent

mov edi,r ; result

; base case: if exponent is 0, result is zero
cmp eax,0
je zero_case

; base_case : if exponent is 1, result is base
cmp eax,1
je one_case

dec eax
invoke power , edx, eax, edi
mov eax,[edi]
mul edx
mov [edi],eax
jmp done

zero_case:
	mov dword ptr[edi],1
	jmp done
one_case:
	mov [edi],edx
done:
ret

power endp

main proc

invoke power, base,exponent, offset result
mov eax,result
call writeint
  exit
main ENDP
END main